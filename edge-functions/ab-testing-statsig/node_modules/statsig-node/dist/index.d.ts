import DynamicConfig from './DynamicConfig';
import { AdapterResponse, IDataAdapter } from './interfaces/IDataAdapter';
import Layer from './Layer';
import { RulesUpdatedCallback, StatsigEnvironment, StatsigOptions } from './StatsigOptions';
import StatsigServer, { LogEventObject } from './StatsigServer';
import { StatsigUser } from './StatsigUser';
export { DynamicConfig, Layer, LogEventObject, RulesUpdatedCallback, StatsigUser, StatsigOptions, StatsigEnvironment, IDataAdapter, AdapterResponse, };
declare const Statsig: {
    _instance: StatsigServer | null;
    initialize(secretKey: string, options?: StatsigOptions): Promise<void>;
    checkGate(user: StatsigUser, gateName: string): Promise<boolean>;
    checkGateWithExposureLoggingDisabled(user: StatsigUser, gateName: string): Promise<boolean>;
    manuallyLogGateExposure(user: StatsigUser, gateName: string): void;
    getConfig(user: StatsigUser, configName: string): Promise<DynamicConfig>;
    getConfigWithExposureLoggingDisabled(user: StatsigUser, configName: string): Promise<DynamicConfig>;
    manuallyLogConfigExposure(user: StatsigUser, configName: string): void;
    getExperiment(user: StatsigUser, experimentName: string): Promise<DynamicConfig>;
    getExperimentWithExposureLoggingDisabled(user: StatsigUser, experimentName: string): Promise<DynamicConfig>;
    manuallyLogExperimentExposure(user: StatsigUser, experimentName: string): void;
    getLayer(user: StatsigUser, layerName: string): Promise<Layer>;
    getLayerWithExposureLoggingDisabled(user: StatsigUser, layerName: string): Promise<Layer>;
    manuallyLogLayerParameterExposure(user: StatsigUser, layerName: string, parameterName: string): void;
    logEvent(user: StatsigUser, eventName: string, value?: string | number | null, metadata?: Record<string, unknown> | null): void;
    logEventObject(eventObject: {
        eventName: string;
        user: StatsigUser;
        value?: string | number | null;
        metadata?: Record<string, unknown>;
        time?: string | null;
    }): void;
    shutdown(): void;
    getClientInitializeResponse(user: StatsigUser): Record<string, unknown> | null;
    overrideGate(gateName: string, value: boolean, userID?: string): void;
    overrideConfig(configName: string, value: Record<string, unknown>, userID?: string): void;
    overrideLayer(layerName: string, value: Record<string, unknown>, userID?: string): void;
    flush(): Promise<void>;
    _enforceServer(): StatsigServer;
};
declare type Statsig = Omit<typeof Statsig, '_instance' | '_enforceServer'>;
declare const _default: Statsig;
export default _default;
