"use strict";
exports.__esModule = true;
var core_1 = require("./utils/core");
/**
 * Returns the data for a DynamicConfig in the statsig console via typed get functions
 */
var DynamicConfig = /** @class */ (function () {
    function DynamicConfig(configName, value, ruleID, secondaryExposures) {
        if (value === void 0) { value = {}; }
        if (ruleID === void 0) { ruleID = ''; }
        if (secondaryExposures === void 0) { secondaryExposures = []; }
        var _a;
        if (typeof configName !== 'string' || configName.length === 0) {
            configName = '';
        }
        if (value == null || typeof value !== 'object') {
            value = {};
        }
        this.name = configName;
        this.value = (_a = (0, core_1.clone)(value)) !== null && _a !== void 0 ? _a : {};
        this._ruleID = ruleID;
        this._secondaryExposures = Array.isArray(secondaryExposures)
            ? secondaryExposures
            : [];
    }
    DynamicConfig.prototype.get = function (key, defaultValue, typeGuard) {
        if (typeGuard === void 0) { typeGuard = null; }
        if (defaultValue === undefined) {
            defaultValue = null;
        }
        // @ts-ignore
        var val = this.getValue(key, defaultValue);
        if (val == null) {
            return defaultValue;
        }
        if (typeGuard != null) {
            return typeGuard(val) ? val : defaultValue;
        }
        if (defaultValue == null) {
            return val;
        }
        if (typeof val === typeof defaultValue &&
            Array.isArray(defaultValue) === Array.isArray(val)) {
            return val;
        }
        return defaultValue;
    };
    DynamicConfig.prototype.getValue = function (key, defaultValue) {
        var _a;
        if (key == null) {
            return this.value;
        }
        if (defaultValue === undefined) {
            defaultValue = null;
        }
        return (_a = this.value[key]) !== null && _a !== void 0 ? _a : defaultValue;
    };
    DynamicConfig.prototype.getRuleID = function () {
        return this._ruleID;
    };
    DynamicConfig.prototype._getSecondaryExposures = function () {
        return this._secondaryExposures;
    };
    return DynamicConfig;
}());
exports["default"] = DynamicConfig;
